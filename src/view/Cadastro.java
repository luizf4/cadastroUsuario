package view;

import java.awt.AWTKeyStroke;
import java.awt.Component;
import java.awt.Container;
import java.awt.KeyboardFocusManager;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;
import model.Pessoa;

/**
 * @author Luiz Fernando de Souza 
 * Matricula: 225272 
 * ADS - EAD SOROCABA
 */
public class Cadastro extends javax.swing.JFrame {

    ArrayList<Pessoa> pessoas = new ArrayList<Pessoa>();

    SimpleDateFormat minhaData = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Métodos que habilita e desabilita as caixas
     * ao desabilitar as caixas de texto as mesmas são limpas.
     * @param container
     */
    public static void habilitaCaixaTexto(Container container) {

        Component components[] = container.getComponents();

        for (Component component : components) {

            if (component instanceof JFormattedTextField) {

                JFormattedTextField field = (JFormattedTextField) component;

                if (!field.isEnabled()) {

                    field.setEnabled(true);
                } else {

                    field.setEnabled(false);
                    field.setValue(null);

                }

            } else if (component instanceof JTextField) {

                JTextField field = (JTextField) component;

                if (!field.isEnabled()) {

                    field.setEnabled(true);

                } else {

                    field.setEnabled(false);
                    field.setText("");

                }

            } else if (component instanceof JTextArea) {

                JTextArea area = (JTextArea) component;

                if (!area.isEnabled()) {

                    area.setEnabled(true);

                } else {

                    area.setEnabled(false);
                    area.setText("");
                }

            } else if (component instanceof JRadioButton) {

                JRadioButton radio = (JRadioButton) component;

                if (!radio.isEnabled()) {

                    radio.setEnabled(true);

                } else {

                    radio.setEnabled(false);

                }
            } else if (component instanceof JComboBox) {

                JComboBox combo = (JComboBox) component;

                if (!combo.isEnabled()) {

                    combo.setEnabled(true);

                } else {

                    combo.setEnabled(false);
                    combo.setSelectedIndex(-1);
                }
            } else if (component instanceof JCheckBox) {

                JCheckBox box = (JCheckBox) component;

                if (!box.isEnabled()) {

                    box.setEnabled(true);

                } else {

                    box.setEnabled(false);
                    box.setSelected(false);

                }

            }

        }

    }

    public Cadastro() {
        initComponents();
        
        //Adicionando ENTER para mudar de jText
        HashSet conj = new HashSet(this.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        this.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
        
        //Adicionando o icone da aplicação
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("user.png")));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bGroupSexo = new javax.swing.ButtonGroup();
        jPnlDadosPessoais = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        lblDataNascimento = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtCPF = new javax.swing.JFormattedTextField();
        txtDataNascimento = new javax.swing.JFormattedTextField();
        lblSexo = new javax.swing.JLabel();
        rdbMasculino = new javax.swing.JRadioButton();
        rdbFeminino = new javax.swing.JRadioButton();
        cmbEstadoCivil = new javax.swing.JComboBox<>();
        lblEstadoCivil = new javax.swing.JLabel();
        jPnlEndereco = new javax.swing.JPanel();
        lblEndereco = new javax.swing.JLabel();
        lblNumero = new javax.swing.JLabel();
        lblCEP = new javax.swing.JLabel();
        lblBairro = new javax.swing.JLabel();
        lblCidade = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        txtCEP = new javax.swing.JFormattedTextField();
        txtBairro = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        txtNumero = new javax.swing.JFormattedTextField();
        jPnlRelatorio = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRelatorio = new javax.swing.JTextArea();
        lblTitulo = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnGerarRelatorio = new javax.swing.JButton();
        jPnlInteresses = new javax.swing.JPanel();
        jChkEsportes = new javax.swing.JCheckBox();
        jChkGames = new javax.swing.JCheckBox();
        jChkViagens = new javax.swing.JCheckBox();
        jchkCinema = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastro de Usuário");
        setMinimumSize(new java.awt.Dimension(650, 760));
        setName(""); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jPnlDadosPessoais.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados Pessoais", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPnlDadosPessoais.setToolTipText("");
        jPnlDadosPessoais.setName(""); // NOI18N
        jPnlDadosPessoais.setLayout(null);

        lblNome.setText("Nome:");
        jPnlDadosPessoais.add(lblNome);
        lblNome.setBounds(20, 30, 50, 16);

        lblDataNascimento.setText("Data Nasc.:");
        jPnlDadosPessoais.add(lblDataNascimento);
        lblDataNascimento.setBounds(20, 70, 80, 16);

        lblCPF.setText("CPF:");
        jPnlDadosPessoais.add(lblCPF);
        lblCPF.setBounds(240, 70, 40, 20);

        txtNome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNome.setEnabled(false);
        jPnlDadosPessoais.add(txtNome);
        txtNome.setBounds(70, 30, 400, 30);

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCPF.setToolTipText("");
        txtCPF.setEnabled(false);
        txtCPF.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPnlDadosPessoais.add(txtCPF);
        txtCPF.setBounds(280, 70, 120, 30);

        try {
            txtDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataNascimento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataNascimento.setToolTipText("Formato dd/MM/yyyy");
        txtDataNascimento.setEnabled(false);
        txtDataNascimento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPnlDadosPessoais.add(txtDataNascimento);
        txtDataNascimento.setBounds(100, 70, 120, 30);

        lblSexo.setText("Sexo:");
        jPnlDadosPessoais.add(lblSexo);
        lblSexo.setBounds(480, 30, 32, 16);

        bGroupSexo.add(rdbMasculino);
        rdbMasculino.setText("M");
        rdbMasculino.setEnabled(false);
        jPnlDadosPessoais.add(rdbMasculino);
        rdbMasculino.setBounds(520, 40, 35, 24);

        bGroupSexo.add(rdbFeminino);
        rdbFeminino.setText("F");
        rdbFeminino.setEnabled(false);
        jPnlDadosPessoais.add(rdbFeminino);
        rdbFeminino.setBounds(560, 40, 40, 24);

        cmbEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CASADO (a)", "SOLTEIRO(a)", "DIVORCIADO(a)", "AMASIADO(a)", "VIÚVO(a)" }));
        cmbEstadoCivil.setSelectedIndex(-1);
        cmbEstadoCivil.setToolTipText("");
        cmbEstadoCivil.setEnabled(false);
        jPnlDadosPessoais.add(cmbEstadoCivil);
        cmbEstadoCivil.setBounds(490, 70, 110, 30);

        lblEstadoCivil.setText("Estado Civil:");
        jPnlDadosPessoais.add(lblEstadoCivil);
        lblEstadoCivil.setBounds(410, 70, 68, 20);

        getContentPane().add(jPnlDadosPessoais);
        jPnlDadosPessoais.setBounds(10, 50, 610, 110);

        jPnlEndereco.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Endereço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPnlEndereco.setLayout(null);

        lblEndereco.setText("End.:");
        jPnlEndereco.add(lblEndereco);
        lblEndereco.setBounds(20, 30, 40, 16);

        lblNumero.setText("N.º:");
        jPnlEndereco.add(lblNumero);
        lblNumero.setBounds(470, 30, 30, 20);

        lblCEP.setText("CEP:");
        jPnlEndereco.add(lblCEP);
        lblCEP.setBounds(20, 70, 40, 16);

        lblBairro.setText("Bairro:");
        jPnlEndereco.add(lblBairro);
        lblBairro.setBounds(350, 70, 50, 16);

        lblCidade.setText("Cidade:");
        jPnlEndereco.add(lblCidade);
        lblCidade.setBounds(20, 110, 50, 16);

        txtEndereco.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtEndereco.setEnabled(false);
        jPnlEndereco.add(txtEndereco);
        txtEndereco.setBounds(60, 30, 390, 30);

        try {
            txtCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCEP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCEP.setEnabled(false);
        txtCEP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPnlEndereco.add(txtCEP);
        txtCEP.setBounds(60, 70, 90, 30);

        txtBairro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBairro.setEnabled(false);
        jPnlEndereco.add(txtBairro);
        txtBairro.setBounds(400, 70, 200, 30);

        txtCidade.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCidade.setEnabled(false);
        jPnlEndereco.add(txtCidade);
        txtCidade.setBounds(70, 110, 380, 30);

        txtNumero.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        txtNumero.setEnabled(false);
        txtNumero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPnlEndereco.add(txtNumero);
        txtNumero.setBounds(510, 30, 90, 30);

        getContentPane().add(jPnlEndereco);
        jPnlEndereco.setBounds(10, 170, 610, 150);

        jPnlRelatorio.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Relatório", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPnlRelatorio.setLayout(null);

        txtRelatorio.setEditable(false);
        txtRelatorio.setColumns(20);
        txtRelatorio.setRows(5);
        jScrollPane1.setViewportView(txtRelatorio);

        jPnlRelatorio.add(jScrollPane1);
        jScrollPane1.setBounds(10, 30, 590, 210);

        getContentPane().add(jPnlRelatorio);
        jPnlRelatorio.setBounds(10, 430, 610, 250);

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblTitulo.setText("Cadastro de Usuários");
        getContentPane().add(lblTitulo);
        lblTitulo.setBounds(20, -10, 247, 70);

        btnSalvar.setMnemonic('S');
        btnSalvar.setText("Salvar");
        btnSalvar.setToolTipText("Salvar Usuario");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar);
        btnSalvar.setBounds(120, 400, 90, 26);

        btnSair.setMnemonic('r');
        btnSair.setText("Sair");
        btnSair.setToolTipText("Sair do Sistema");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(520, 400, 90, 26);

        btnNovo.setMnemonic('N');
        btnNovo.setText("Novo");
        btnNovo.setToolTipText("Cadastrar Novo Usuário");
        btnNovo.setMinimumSize(new java.awt.Dimension(120, 26));
        btnNovo.setPreferredSize(new java.awt.Dimension(120, 26));
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNovo);
        btnNovo.setBounds(20, 400, 90, 26);

        btnGerarRelatorio.setMnemonic('G');
        btnGerarRelatorio.setText("Gerar Relatório");
        btnGerarRelatorio.setToolTipText("Gerar Relatório");
        btnGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarRelatorioActionPerformed(evt);
            }
        });
        getContentPane().add(btnGerarRelatorio);
        btnGerarRelatorio.setBounds(220, 400, 120, 26);

        jPnlInteresses.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Interesses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPnlInteresses.setLayout(null);

        jChkEsportes.setText("Esportes");
        jChkEsportes.setEnabled(false);
        jPnlInteresses.add(jChkEsportes);
        jChkEsportes.setBounds(90, 20, 76, 24);

        jChkGames.setText("Games");
        jChkGames.setEnabled(false);
        jPnlInteresses.add(jChkGames);
        jChkGames.setBounds(210, 20, 65, 24);

        jChkViagens.setText("Viagens");
        jChkViagens.setEnabled(false);
        jPnlInteresses.add(jChkViagens);
        jChkViagens.setBounds(330, 20, 71, 24);

        jchkCinema.setText("Cinema");
        jchkCinema.setEnabled(false);
        jPnlInteresses.add(jchkCinema);
        jchkCinema.setBounds(450, 20, 93, 24);

        getContentPane().add(jPnlInteresses);
        jPnlInteresses.setBounds(10, 330, 610, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        /* para funcionar, setar o defaultCloseOperation do formulário com
        DO_NOTHING*/
        if (JOptionPane.showConfirmDialog(this, "Deseja Sair?", "Atenção",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {

            dispose();

        }

    }//GEN-LAST:event_formWindowClosing

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed

        //chama o evento do formulario e faz pergunta ao sair
        formWindowClosing(null);

    }//GEN-LAST:event_btnSairActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed

        habilitaCaixaTexto(jPnlDadosPessoais);
        habilitaCaixaTexto(jPnlEndereco);
        habilitaCaixaTexto(jPnlInteresses);
        btnNovo.setEnabled(false);
        btnSalvar.setEnabled(true);
        cmbEstadoCivil.setSelectedIndex(0);
        rdbMasculino.setSelected(true);
        txtNome.grabFocus();

    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        try {
            Pessoa pessoa = new Pessoa();
            String resul = "";

            pessoa.setNome(txtNome.getText());
            pessoa.setCpf(txtCPF.getText());
            Date data = minhaData.parse(txtDataNascimento.getText());
            pessoa.setDataNascimento(data);
            pessoa.setEndereco(txtEndereco.getText());
            pessoa.setNumero(txtNumero.getText());
            pessoa.setBairro(txtBairro.getText());
            pessoa.setCep(txtCEP.getText());
            pessoa.setCidade(txtCidade.getText());
            pessoa.setEstadoCivil(cmbEstadoCivil.getName());

            if (rdbMasculino.isSelected()) {

                pessoa.setSexo(rdbMasculino.getText());
            } else {

                pessoa.setSexo(rdbFeminino.getText());
            }
            pessoa.setEstadoCivil(cmbEstadoCivil.getSelectedItem().toString());

            if (jChkEsportes.isSelected()) {

                resul = resul + jChkEsportes.getText() + " | ";

            }
            if (jChkGames.isSelected()) {

                resul = resul + jChkGames.getText() + " | ";

            }
            if (jChkViagens.isSelected()) {

                resul = resul + jChkViagens.getText() + " | ";

            }
            if (jchkCinema.isSelected()) {

                resul = resul + jchkCinema.getText() + " | ";

            }

            pessoa.setInteresses(resul);

            pessoas.add(pessoa);

            habilitaCaixaTexto(jPnlDadosPessoais);
            habilitaCaixaTexto(jPnlEndereco);
            habilitaCaixaTexto(jPnlInteresses);
            btnNovo.setEnabled(true);
            btnNovo.grabFocus();
            btnSalvar.setEnabled(false);
            bGroupSexo.clearSelection();

        } catch (ParseException ex) {

            JOptionPane.showMessageDialog(this, "Data Incorreta", "Cadastro Usuarios",
                    JOptionPane.ERROR_MESSAGE);
            txtDataNascimento.grabFocus();
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarRelatorioActionPerformed

        if (pessoas.isEmpty()) {

            JOptionPane.showMessageDialog(this, "Cadastro Vazio!!!", "Cadastro Usuarios",
                    JOptionPane.ERROR_MESSAGE);

        } else {

            txtRelatorio.setText("");

            for (Pessoa pes : pessoas) {

                txtRelatorio.setText(txtRelatorio.getText()
                        + (pessoas.indexOf(pes) == 0 ? ""
                        : "\n------------------------------------------------\n")
                        + pes.toString());

            }

        }

    }//GEN-LAST:event_btnGerarRelatorioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }     
            
            
            //UIManager.setLookAndFeel("com.seaglasslookandfeel.SeaGlassLookAndFeel");
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bGroupSexo;
    private javax.swing.JButton btnGerarRelatorio;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cmbEstadoCivil;
    private javax.swing.JCheckBox jChkEsportes;
    private javax.swing.JCheckBox jChkGames;
    private javax.swing.JCheckBox jChkViagens;
    private javax.swing.JPanel jPnlDadosPessoais;
    private javax.swing.JPanel jPnlEndereco;
    private javax.swing.JPanel jPnlInteresses;
    private javax.swing.JPanel jPnlRelatorio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jchkCinema;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCEP;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEstadoCivil;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JRadioButton rdbFeminino;
    private javax.swing.JRadioButton rdbMasculino;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JFormattedTextField txtDataNascimento;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtNumero;
    private javax.swing.JTextArea txtRelatorio;
    // End of variables declaration//GEN-END:variables
}
